security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN_USER, ROLE_ADMIN_QUESTION, ROLE_ADMIN_ANSWER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_EDITOR: [ROLE_ADMIN_QUESTION, ROLE_ADMIN_ANSWER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator:
                - App\Security\LoginFormAuthenticator
                - App\Security\ApiTokenAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
            switch_user: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # IS_AUTHENTICATED_ANONYMOUSLY : tous les utilisateurs ont ce droit
        # authentifié ou non
        #- { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # A partir du moment ou je suis authentifié, j'ai ce droit
        # quelque soit mon rôle (c'est équivalent à check ROLE_USER
        # puisque mon entité donne ce rôle à tout le monde)
        #- { path: ^/, role: IS_AUTHENTICATED_FULLY }
